/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$icon-2-name: 'icon-2';
$icon-2-x: 0px;
$icon-2-y: 210px;
$icon-2-offset-x: 0px;
$icon-2-offset-y: -210px;
$icon-2-width: 170px;
$icon-2-height: 174px;
$icon-2-total-width: 418px;
$icon-2-total-height: 384px;
$icon-2-image: '../images/sprite.png';
$icon-2: (0px, 210px, 0px, -210px, 170px, 174px, 418px, 384px, '../images/sprite.png', 'icon-2', );
$icon-hover-name: 'icon-hover';
$icon-hover-x: 0px;
$icon-hover-y: 0px;
$icon-hover-offset-x: 0px;
$icon-hover-offset-y: 0px;
$icon-hover-width: 209px;
$icon-hover-height: 210px;
$icon-hover-total-width: 418px;
$icon-hover-total-height: 384px;
$icon-hover-image: '../images/sprite.png';
$icon-hover: (0px, 0px, 0px, 0px, 209px, 210px, 418px, 384px, '../images/sprite.png', 'icon-hover', );
$icon-name: 'icon';
$icon-x: 209px;
$icon-y: 0px;
$icon-offset-x: -209px;
$icon-offset-y: 0px;
$icon-width: 209px;
$icon-height: 210px;
$icon-total-width: 418px;
$icon-total-height: 384px;
$icon-image: '../images/sprite.png';
$icon: (209px, 0px, -209px, 0px, 209px, 210px, 418px, 384px, '../images/sprite.png', 'icon', );
$nav-mobail-hover-name: 'nav-mobail-hover';
$nav-mobail-hover-x: 170px;
$nav-mobail-hover-y: 210px;
$nav-mobail-hover-offset-x: -170px;
$nav-mobail-hover-offset-y: -210px;
$nav-mobail-hover-width: 16px;
$nav-mobail-hover-height: 14px;
$nav-mobail-hover-total-width: 418px;
$nav-mobail-hover-total-height: 384px;
$nav-mobail-hover-image: '../images/sprite.png';
$nav-mobail-hover: (170px, 210px, -170px, -210px, 16px, 14px, 418px, 384px, '../images/sprite.png', 'nav-mobail-hover', );
$nav-mobail-name: 'nav-mobail';
$nav-mobail-x: 186px;
$nav-mobail-y: 210px;
$nav-mobail-offset-x: -186px;
$nav-mobail-offset-y: -210px;
$nav-mobail-width: 16px;
$nav-mobail-height: 14px;
$nav-mobail-total-width: 418px;
$nav-mobail-total-height: 384px;
$nav-mobail-image: '../images/sprite.png';
$nav-mobail: (186px, 210px, -186px, -210px, 16px, 14px, 418px, 384px, '../images/sprite.png', 'nav-mobail', );
$spritesheet-width: 418px;
$spritesheet-height: 384px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($icon-2, $icon-hover, $icon, $nav-mobail-hover, $nav-mobail, );
$spritesheet: (418px, 384px, '../images/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Here are example usages in HTML:

`display: block` sprite:
<div class="icon-home"></div>

`display: inline-block` sprite:
<img class="icon-home" />
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
